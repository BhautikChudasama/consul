// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: pbauth/v1alpha1/traffic_permission.proto

package authv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action int32

const (
	Action_ACTION_UNSPECIFIED Action = 0
	Action_ACTION_DENY        Action = 1
	Action_ACTION_ALLOW       Action = 2
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_DENY",
		2: "ACTION_ALLOW",
	}
	Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ACTION_DENY":        1,
		"ACTION_ALLOW":       2,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_pbauth_v1alpha1_traffic_permission_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_pbauth_v1alpha1_traffic_permission_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{0}
}

type TrafficPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination *Destination  `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Action      Action        `protobuf:"varint,2,opt,name=action,proto3,enum=hashicorp.consul.auth.v1alpha1.Action" json:"action,omitempty"`
	Permissions []*Permission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *TrafficPermission) Reset() {
	*x = TrafficPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficPermission) ProtoMessage() {}

func (x *TrafficPermission) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficPermission.ProtoReflect.Descriptor instead.
func (*TrafficPermission) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{0}
}

func (x *TrafficPermission) GetDestination() *Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *TrafficPermission) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_UNSPECIFIED
}

func (x *TrafficPermission) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type PartitionTrafficPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      Action        `protobuf:"varint,1,opt,name=action,proto3,enum=hashicorp.consul.auth.v1alpha1.Action" json:"action,omitempty"`
	Permissions []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *PartitionTrafficPermission) Reset() {
	*x = PartitionTrafficPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionTrafficPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionTrafficPermission) ProtoMessage() {}

func (x *PartitionTrafficPermission) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionTrafficPermission.ProtoReflect.Descriptor instead.
func (*PartitionTrafficPermission) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{1}
}

func (x *PartitionTrafficPermission) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_UNSPECIFIED
}

func (x *PartitionTrafficPermission) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Destination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityName string `protobuf:"bytes,1,opt,name=identity_name,json=identityName,proto3" json:"identity_name,omitempty"`
}

func (x *Destination) Reset() {
	*x = Destination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Destination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Destination) ProtoMessage() {}

func (x *Destination) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Destination.ProtoReflect.Descriptor instead.
func (*Destination) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{2}
}

func (x *Destination) GetIdentityName() string {
	if x != nil {
		return x.IdentityName
	}
	return ""
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources          []*Source          `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	DestinationRules []*DestinationRule `protobuf:"bytes,2,rep,name=destination_rules,json=destinationRules,proto3" json:"destination_rules,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{3}
}

func (x *Permission) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Permission) GetDestinationRules() []*DestinationRule {
	if x != nil {
		return x.DestinationRules
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityName  string `protobuf:"bytes,1,opt,name=identity_name,json=identityName,proto3" json:"identity_name,omitempty"`
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Partition     string `protobuf:"bytes,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Peer          string `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	SamenessGroup string `protobuf:"bytes,5,opt,name=sameness_group,json=samenessGroup,proto3" json:"sameness_group,omitempty"`
	// exclude is a list of sources to exclude from this source.
	Exclude []*ExcludeSource `protobuf:"bytes,6,rep,name=exclude,proto3" json:"exclude,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{4}
}

func (x *Source) GetIdentityName() string {
	if x != nil {
		return x.IdentityName
	}
	return ""
}

func (x *Source) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Source) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *Source) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

func (x *Source) GetSamenessGroup() string {
	if x != nil {
		return x.SamenessGroup
	}
	return ""
}

func (x *Source) GetExclude() []*ExcludeSource {
	if x != nil {
		return x.Exclude
	}
	return nil
}

// ExcludeSource is almost the same as source but it doesn't allow to
// add more exclude sources.
type ExcludeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityName  string `protobuf:"bytes,1,opt,name=identity_name,json=identityName,proto3" json:"identity_name,omitempty"`
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Partition     string `protobuf:"bytes,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Peer          string `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	SamenessGroup string `protobuf:"bytes,5,opt,name=sameness_group,json=samenessGroup,proto3" json:"sameness_group,omitempty"`
}

func (x *ExcludeSource) Reset() {
	*x = ExcludeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcludeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcludeSource) ProtoMessage() {}

func (x *ExcludeSource) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcludeSource.ProtoReflect.Descriptor instead.
func (*ExcludeSource) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{5}
}

func (x *ExcludeSource) GetIdentityName() string {
	if x != nil {
		return x.IdentityName
	}
	return ""
}

func (x *ExcludeSource) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ExcludeSource) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *ExcludeSource) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

func (x *ExcludeSource) GetSamenessGroup() string {
	if x != nil {
		return x.SamenessGroup
	}
	return ""
}

type DestinationRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Path:
	//
	//	*DestinationRule_PathExact
	//	*DestinationRule_PathPrefix
	//	*DestinationRule_PathRegex
	Path      isDestinationRule_Path   `protobuf_oneof:"path"`
	Methods   []string                 `protobuf:"bytes,4,rep,name=methods,proto3" json:"methods,omitempty"`
	Header    *DestinationRuleHeader   `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	PortNames []string                 `protobuf:"bytes,6,rep,name=port_names,json=portNames,proto3" json:"port_names,omitempty"`
	Exclude   []*ExcludePermissionRule `protobuf:"bytes,7,rep,name=exclude,proto3" json:"exclude,omitempty"`
}

func (x *DestinationRule) Reset() {
	*x = DestinationRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestinationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationRule) ProtoMessage() {}

func (x *DestinationRule) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationRule.ProtoReflect.Descriptor instead.
func (*DestinationRule) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{6}
}

func (m *DestinationRule) GetPath() isDestinationRule_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (x *DestinationRule) GetPathExact() string {
	if x, ok := x.GetPath().(*DestinationRule_PathExact); ok {
		return x.PathExact
	}
	return ""
}

func (x *DestinationRule) GetPathPrefix() string {
	if x, ok := x.GetPath().(*DestinationRule_PathPrefix); ok {
		return x.PathPrefix
	}
	return ""
}

func (x *DestinationRule) GetPathRegex() string {
	if x, ok := x.GetPath().(*DestinationRule_PathRegex); ok {
		return x.PathRegex
	}
	return ""
}

func (x *DestinationRule) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *DestinationRule) GetHeader() *DestinationRuleHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DestinationRule) GetPortNames() []string {
	if x != nil {
		return x.PortNames
	}
	return nil
}

func (x *DestinationRule) GetExclude() []*ExcludePermissionRule {
	if x != nil {
		return x.Exclude
	}
	return nil
}

type isDestinationRule_Path interface {
	isDestinationRule_Path()
}

type DestinationRule_PathExact struct {
	PathExact string `protobuf:"bytes,1,opt,name=path_exact,json=pathExact,proto3,oneof"`
}

type DestinationRule_PathPrefix struct {
	PathPrefix string `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix,proto3,oneof"`
}

type DestinationRule_PathRegex struct {
	PathRegex string `protobuf:"bytes,3,opt,name=path_regex,json=pathRegex,proto3,oneof"`
}

func (*DestinationRule_PathExact) isDestinationRule_Path() {}

func (*DestinationRule_PathPrefix) isDestinationRule_Path() {}

func (*DestinationRule_PathRegex) isDestinationRule_Path() {}

type ExcludePermissionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Path:
	//
	//	*ExcludePermissionRule_PathExact
	//	*ExcludePermissionRule_PathPrefix
	//	*ExcludePermissionRule_PathRegex
	Path isExcludePermissionRule_Path `protobuf_oneof:"path"`
	// methods is the list of HTTP methods. If no methods are specified,
	// this rule will apply to all methods.
	Methods []string               `protobuf:"bytes,4,rep,name=methods,proto3" json:"methods,omitempty"`
	Header  *DestinationRuleHeader `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	// ports is a list of workload ports from which this permission is excluded.
	Ports []string `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *ExcludePermissionRule) Reset() {
	*x = ExcludePermissionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcludePermissionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcludePermissionRule) ProtoMessage() {}

func (x *ExcludePermissionRule) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcludePermissionRule.ProtoReflect.Descriptor instead.
func (*ExcludePermissionRule) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{7}
}

func (m *ExcludePermissionRule) GetPath() isExcludePermissionRule_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (x *ExcludePermissionRule) GetPathExact() string {
	if x, ok := x.GetPath().(*ExcludePermissionRule_PathExact); ok {
		return x.PathExact
	}
	return ""
}

func (x *ExcludePermissionRule) GetPathPrefix() string {
	if x, ok := x.GetPath().(*ExcludePermissionRule_PathPrefix); ok {
		return x.PathPrefix
	}
	return ""
}

func (x *ExcludePermissionRule) GetPathRegex() string {
	if x, ok := x.GetPath().(*ExcludePermissionRule_PathRegex); ok {
		return x.PathRegex
	}
	return ""
}

func (x *ExcludePermissionRule) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *ExcludePermissionRule) GetHeader() *DestinationRuleHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ExcludePermissionRule) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

type isExcludePermissionRule_Path interface {
	isExcludePermissionRule_Path()
}

type ExcludePermissionRule_PathExact struct {
	PathExact string `protobuf:"bytes,1,opt,name=path_exact,json=pathExact,proto3,oneof"`
}

type ExcludePermissionRule_PathPrefix struct {
	PathPrefix string `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix,proto3,oneof"`
}

type ExcludePermissionRule_PathRegex struct {
	PathRegex string `protobuf:"bytes,3,opt,name=path_regex,json=pathRegex,proto3,oneof"`
}

func (*ExcludePermissionRule_PathExact) isExcludePermissionRule_Path() {}

func (*ExcludePermissionRule_PathPrefix) isExcludePermissionRule_Path() {}

func (*ExcludePermissionRule_PathRegex) isExcludePermissionRule_Path() {}

type DestinationRuleHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Present bool   `protobuf:"varint,2,opt,name=present,proto3" json:"present,omitempty"`
	Exact   string `protobuf:"bytes,3,opt,name=exact,proto3" json:"exact,omitempty"`
	Prefix  string `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix  string `protobuf:"bytes,5,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Regex   string `protobuf:"bytes,6,opt,name=regex,proto3" json:"regex,omitempty"`
	Invert  bool   `protobuf:"varint,7,opt,name=invert,proto3" json:"invert,omitempty"`
}

func (x *DestinationRuleHeader) Reset() {
	*x = DestinationRuleHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestinationRuleHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationRuleHeader) ProtoMessage() {}

func (x *DestinationRuleHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationRuleHeader.ProtoReflect.Descriptor instead.
func (*DestinationRuleHeader) Descriptor() ([]byte, []int) {
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP(), []int{8}
}

func (x *DestinationRuleHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DestinationRuleHeader) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *DestinationRuleHeader) GetExact() string {
	if x != nil {
		return x.Exact
	}
	return ""
}

func (x *DestinationRuleHeader) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DestinationRuleHeader) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *DestinationRuleHeader) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

func (x *DestinationRuleHeader) GetInvert() bool {
	if x != nil {
		return x.Invert
	}
	return false
}

var File_pbauth_v1alpha1_traffic_permission_proto protoreflect.FileDescriptor

var file_pbauth_v1alpha1_traffic_permission_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x62, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0xf0, 0x01, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4c, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaa, 0x01,
	0x0a, 0x1a, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xac,
	0x01, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x5c, 0x0a, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x10, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xed, 0x01,
	0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x61, 0x6d, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x61, 0x6d, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x47, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x22, 0xab, 0x01,
	0x0a, 0x0d, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6d, 0x65, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x61,
	0x6d, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xd7, 0x02, 0x0a, 0x0f,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x45, 0x78, 0x61, 0x63, 0x74,
	0x12, 0x21, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x67, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x4d,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x07,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x83, 0x02, 0x0a, 0x15, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x45, 0x78, 0x61, 0x63, 0x74,
	0x12, 0x21, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x67, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x4d,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xb9, 0x01, 0x0a, 0x15,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67,
	0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x2a, 0x43, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x42, 0x9e, 0x02, 0x0a,
	0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x42, 0x16, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x62, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x48, 0x43, 0x41, 0xaa, 0x02, 0x1e, 0x48, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x1e, 0x48, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x5c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x5c, 0x41,
	0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x2a, 0x48,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x5c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x5c,
	0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21, 0x48, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x3a, 0x3a, 0x41,
	0x75, 0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pbauth_v1alpha1_traffic_permission_proto_rawDescOnce sync.Once
	file_pbauth_v1alpha1_traffic_permission_proto_rawDescData = file_pbauth_v1alpha1_traffic_permission_proto_rawDesc
)

func file_pbauth_v1alpha1_traffic_permission_proto_rawDescGZIP() []byte {
	file_pbauth_v1alpha1_traffic_permission_proto_rawDescOnce.Do(func() {
		file_pbauth_v1alpha1_traffic_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbauth_v1alpha1_traffic_permission_proto_rawDescData)
	})
	return file_pbauth_v1alpha1_traffic_permission_proto_rawDescData
}

var file_pbauth_v1alpha1_traffic_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pbauth_v1alpha1_traffic_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pbauth_v1alpha1_traffic_permission_proto_goTypes = []interface{}{
	(Action)(0),                        // 0: hashicorp.consul.auth.v1alpha1.Action
	(*TrafficPermission)(nil),          // 1: hashicorp.consul.auth.v1alpha1.TrafficPermission
	(*PartitionTrafficPermission)(nil), // 2: hashicorp.consul.auth.v1alpha1.PartitionTrafficPermission
	(*Destination)(nil),                // 3: hashicorp.consul.auth.v1alpha1.Destination
	(*Permission)(nil),                 // 4: hashicorp.consul.auth.v1alpha1.Permission
	(*Source)(nil),                     // 5: hashicorp.consul.auth.v1alpha1.Source
	(*ExcludeSource)(nil),              // 6: hashicorp.consul.auth.v1alpha1.ExcludeSource
	(*DestinationRule)(nil),            // 7: hashicorp.consul.auth.v1alpha1.DestinationRule
	(*ExcludePermissionRule)(nil),      // 8: hashicorp.consul.auth.v1alpha1.ExcludePermissionRule
	(*DestinationRuleHeader)(nil),      // 9: hashicorp.consul.auth.v1alpha1.DestinationRuleHeader
}
var file_pbauth_v1alpha1_traffic_permission_proto_depIdxs = []int32{
	3,  // 0: hashicorp.consul.auth.v1alpha1.TrafficPermission.destination:type_name -> hashicorp.consul.auth.v1alpha1.Destination
	0,  // 1: hashicorp.consul.auth.v1alpha1.TrafficPermission.action:type_name -> hashicorp.consul.auth.v1alpha1.Action
	4,  // 2: hashicorp.consul.auth.v1alpha1.TrafficPermission.permissions:type_name -> hashicorp.consul.auth.v1alpha1.Permission
	0,  // 3: hashicorp.consul.auth.v1alpha1.PartitionTrafficPermission.action:type_name -> hashicorp.consul.auth.v1alpha1.Action
	4,  // 4: hashicorp.consul.auth.v1alpha1.PartitionTrafficPermission.permissions:type_name -> hashicorp.consul.auth.v1alpha1.Permission
	5,  // 5: hashicorp.consul.auth.v1alpha1.Permission.sources:type_name -> hashicorp.consul.auth.v1alpha1.Source
	7,  // 6: hashicorp.consul.auth.v1alpha1.Permission.destination_rules:type_name -> hashicorp.consul.auth.v1alpha1.DestinationRule
	6,  // 7: hashicorp.consul.auth.v1alpha1.Source.exclude:type_name -> hashicorp.consul.auth.v1alpha1.ExcludeSource
	9,  // 8: hashicorp.consul.auth.v1alpha1.DestinationRule.header:type_name -> hashicorp.consul.auth.v1alpha1.DestinationRuleHeader
	8,  // 9: hashicorp.consul.auth.v1alpha1.DestinationRule.exclude:type_name -> hashicorp.consul.auth.v1alpha1.ExcludePermissionRule
	9,  // 10: hashicorp.consul.auth.v1alpha1.ExcludePermissionRule.header:type_name -> hashicorp.consul.auth.v1alpha1.DestinationRuleHeader
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pbauth_v1alpha1_traffic_permission_proto_init() }
func file_pbauth_v1alpha1_traffic_permission_proto_init() {
	if File_pbauth_v1alpha1_traffic_permission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionTrafficPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Destination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcludeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestinationRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcludePermissionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestinationRuleHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DestinationRule_PathExact)(nil),
		(*DestinationRule_PathPrefix)(nil),
		(*DestinationRule_PathRegex)(nil),
	}
	file_pbauth_v1alpha1_traffic_permission_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ExcludePermissionRule_PathExact)(nil),
		(*ExcludePermissionRule_PathPrefix)(nil),
		(*ExcludePermissionRule_PathRegex)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbauth_v1alpha1_traffic_permission_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbauth_v1alpha1_traffic_permission_proto_goTypes,
		DependencyIndexes: file_pbauth_v1alpha1_traffic_permission_proto_depIdxs,
		EnumInfos:         file_pbauth_v1alpha1_traffic_permission_proto_enumTypes,
		MessageInfos:      file_pbauth_v1alpha1_traffic_permission_proto_msgTypes,
	}.Build()
	File_pbauth_v1alpha1_traffic_permission_proto = out.File
	file_pbauth_v1alpha1_traffic_permission_proto_rawDesc = nil
	file_pbauth_v1alpha1_traffic_permission_proto_goTypes = nil
	file_pbauth_v1alpha1_traffic_permission_proto_depIdxs = nil
}
