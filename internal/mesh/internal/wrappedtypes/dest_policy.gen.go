// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
package wrappedtypes

// Code generated by wrapped-protobuf-types/generate.sh. DO NOT EDIT.

import (
	"github.com/hashicorp/consul/internal/resource"
	pbcatalog "github.com/hashicorp/consul/proto-public/pbcatalog/v1alpha1"
	pbmesh "github.com/hashicorp/consul/proto-public/pbmesh/v1alpha1"
	"github.com/hashicorp/consul/proto-public/pbresource"
)

// Avoid unused imports in generated code.
var _ *pbmesh.ParentReference
var _ *pbcatalog.Service

var _ Wrapped = (*DestinationPolicy)(nil)

type DestinationPolicy struct {
	Resource *pbresource.Resource
	*pbmesh.DestinationPolicy
}

func NewDestinationPolicy(dec *resource.DecodedResource[pbmesh.DestinationPolicy, *pbmesh.DestinationPolicy]) *DestinationPolicy {
	if dec == nil {
		return nil
	}
	return &DestinationPolicy{
		Resource:          dec.Resource,
		DestinationPolicy: dec.Data,
	}
}

func (r *DestinationPolicy) GetResource() *pbresource.Resource { return r.Resource }

func (r *DestinationPolicy) ToDecodedResource() *resource.DecodedResource[pbmesh.DestinationPolicy, *pbmesh.DestinationPolicy] {
	if r == nil {
		return nil
	}
	return &resource.DecodedResource[pbmesh.DestinationPolicy, *pbmesh.DestinationPolicy]{
		Resource: r.Resource,
		Data:     r.DestinationPolicy,
	}
}
