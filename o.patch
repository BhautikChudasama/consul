diff --git a/internal/multicluster/internal/types/computed_exported_services_ce_test.go b/internal/multicluster/internal/types/computed_exported_services_ce_test.go
index d56c043811..5abebc467f 100644
--- a/internal/multicluster/internal/types/computed_exported_services_ce_test.go
+++ b/internal/multicluster/internal/types/computed_exported_services_ce_test.go
@@ -28,7 +28,7 @@ func TestComputedExportedServicesValidations(t *testing.T) {
 	cases := map[string]testcase{
 		"computed exported services with peer": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.ComputedExportedServicesType, ComputedExportedServicesName).
-				WithData(t, validComputedExportedServicesWithPeer()).
+				WithData(t, validComputedExportedServicesWithPeer("peer")).
 				Build(),
 		},
 	}
@@ -54,7 +54,7 @@ func TestComputedExportedServicesValidations_Error(t *testing.T) {
 	cases := map[string]testcase{
 		"computed exported services with partition value other than default": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.ComputedExportedServicesType, ComputedExportedServicesName).
-				WithData(t, validComputedExportedServicesWithPartition()).
+				WithData(t, validComputedExportedServicesWithPartition("default")).
 				Build(),
 		},
 	}
diff --git a/internal/multicluster/internal/types/computed_exported_services_test.go b/internal/multicluster/internal/types/computed_exported_services_test.go
index 76b500ed5c..0bcb4fcf93 100644
--- a/internal/multicluster/internal/types/computed_exported_services_test.go
+++ b/internal/multicluster/internal/types/computed_exported_services_test.go
@@ -12,13 +12,13 @@ import (
 	"testing"
 )
 
-func validComputedExportedServicesWithPartition() *multiclusterv1alpha1.ComputedExportedServices {
+func validComputedExportedServicesWithPartition(partitionName string) *multiclusterv1alpha1.ComputedExportedServices {
 	consumers := []*multiclusterv1alpha1.ComputedExportedService{
 		{
 			Consumers: []*multiclusterv1alpha1.ComputedExportedServicesConsumer{
 				{
 					ConsumerTenancy: &multiclusterv1alpha1.ComputedExportedServicesConsumer_Partition{
-						Partition: "partition",
+						Partition: partitionName,
 					},
 				},
 			},
@@ -29,13 +29,13 @@ func validComputedExportedServicesWithPartition() *multiclusterv1alpha1.Computed
 	}
 }
 
-func validComputedExportedServicesWithPeer() *multiclusterv1alpha1.ComputedExportedServices {
+func validComputedExportedServicesWithPeer(peerName string) *multiclusterv1alpha1.ComputedExportedServices {
 	consumers := []*multiclusterv1alpha1.ComputedExportedService{
 		{
 			Consumers: []*multiclusterv1alpha1.ComputedExportedServicesConsumer{
 				{
 					ConsumerTenancy: &multiclusterv1alpha1.ComputedExportedServicesConsumer_Peer{
-						Peer: "peer",
+						Peer: peerName,
 					},
 				},
 			},
@@ -48,7 +48,7 @@ func validComputedExportedServicesWithPeer() *multiclusterv1alpha1.ComputedExpor
 
 func TestComputedExportedServicesValidations_InvalidName(t *testing.T) {
 	res := resourcetest.Resource(multiclusterv1alpha1.ComputedExportedServicesType, "computed-exported-services").
-		WithData(t, validComputedExportedServicesWithPeer()).
+		WithData(t, validComputedExportedServicesWithPeer("peer")).
 		Build()
 
 	err := ValidateComputedExportedServices(res)
diff --git a/internal/multicluster/internal/types/exported_services_ce_test.go b/internal/multicluster/internal/types/exported_services_ce_test.go
index 807d485755..e73aa2e505 100644
--- a/internal/multicluster/internal/types/exported_services_ce_test.go
+++ b/internal/multicluster/internal/types/exported_services_ce_test.go
@@ -29,7 +29,7 @@ func TestExportedServicesValidation(t *testing.T) {
 	cases := map[string]testcase{
 		"exported services with peer": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.ExportedServicesType, "exported-services").
-				WithData(t, validExportedServicesWithPeer()).
+				WithData(t, validExportedServicesWithPeer("peer")).
 				Build(),
 		},
 	}
@@ -56,12 +56,12 @@ func TestExportedServicesValidation_Error(t *testing.T) {
 	cases := map[string]testcase{
 		"exported services with partition": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.ExportedServicesType, "exported-services").
-				WithData(t, validExportedServicesWithPartition()).
+				WithData(t, validExportedServicesWithPartition("default")).
 				Build(),
 		},
 		"exported services with sameness_group": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.ExportedServicesType, "exported-services").
-				WithData(t, validExportedServicesWithSamenessGroup()).
+				WithData(t, validExportedServicesWithSamenessGroup("sameness_group")).
 				Build(),
 		},
 	}
diff --git a/internal/multicluster/internal/types/exported_services_test.go b/internal/multicluster/internal/types/exported_services_test.go
index 77efc276f8..4b76028182 100644
--- a/internal/multicluster/internal/types/exported_services_test.go
+++ b/internal/multicluster/internal/types/exported_services_test.go
@@ -16,11 +16,11 @@ func inValidExportedServices() *multiclusterv1alpha1.ExportedServices {
 	return &multiclusterv1alpha1.ExportedServices{}
 }
 
-func validExportedServicesWithPeer() *multiclusterv1alpha1.ExportedServices {
+func validExportedServicesWithPeer(peerName string) *multiclusterv1alpha1.ExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Peer{
-				Peer: "peer",
+				Peer: peerName,
 			},
 		},
 	}
@@ -30,11 +30,11 @@ func validExportedServicesWithPeer() *multiclusterv1alpha1.ExportedServices {
 	}
 }
 
-func validExportedServicesWithPartition() *multiclusterv1alpha1.ExportedServices {
+func validExportedServicesWithPartition(partitionName string) *multiclusterv1alpha1.ExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Partition{
-				Partition: "partition",
+				Partition: partitionName,
 			},
 		},
 	}
@@ -44,11 +44,11 @@ func validExportedServicesWithPartition() *multiclusterv1alpha1.ExportedServices
 	}
 }
 
-func validExportedServicesWithSamenessGroup() *multiclusterv1alpha1.ExportedServices {
+func validExportedServicesWithSamenessGroup(samenessGroupName string) *multiclusterv1alpha1.ExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_SamenessGroup{
-				SamenessGroup: "sameness_group",
+				SamenessGroup: samenessGroupName,
 			},
 		},
 	}
diff --git a/internal/multicluster/internal/types/namespace_exported_services_ce_test.go b/internal/multicluster/internal/types/namespace_exported_services_ce_test.go
index fe197e3423..c7eea94f40 100644
--- a/internal/multicluster/internal/types/namespace_exported_services_ce_test.go
+++ b/internal/multicluster/internal/types/namespace_exported_services_ce_test.go
@@ -29,7 +29,7 @@ func TestNamespaceExportedServicesValidations(t *testing.T) {
 	cases := map[string]testcase{
 		"namespace exported services with peer": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.NamespaceExportedServicesType, "namespace-exported-services").
-				WithData(t, validNamespaceExportedServicesWithPeer()).
+				WithData(t, validNamespaceExportedServicesWithPeer("peer")).
 				Build(),
 		},
 	}
@@ -56,12 +56,12 @@ func TestNamespaceExportedServicesValidations_Error(t *testing.T) {
 	cases := map[string]testcase{
 		"namespace exported services with partition": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.NamespaceExportedServicesType, "namespace-exported-services").
-				WithData(t, validNamespaceExportedServicesWithPartition()).
+				WithData(t, validNamespaceExportedServicesWithPartition("default")).
 				Build(),
 		},
 		"namespace exported services with sameness_group": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.NamespaceExportedServicesType, "namespace-exported-services").
-				WithData(t, validNamespaceExportedServicesWithSamenessGroup()).
+				WithData(t, validNamespaceExportedServicesWithSamenessGroup("sameness_group")).
 				Build(),
 		},
 	}
diff --git a/internal/multicluster/internal/types/namespace_exported_services_test.go b/internal/multicluster/internal/types/namespace_exported_services_test.go
index 075e75ff8b..dd07f74198 100644
--- a/internal/multicluster/internal/types/namespace_exported_services_test.go
+++ b/internal/multicluster/internal/types/namespace_exported_services_test.go
@@ -10,11 +10,11 @@ import (
 	"testing"
 )
 
-func validNamespaceExportedServicesWithPeer() *multiclusterv1alpha1.NamespaceExportedServices {
+func validNamespaceExportedServicesWithPeer(peerName string) *multiclusterv1alpha1.NamespaceExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Peer{
-				Peer: "peer",
+				Peer: peerName,
 			},
 		},
 	}
@@ -23,11 +23,11 @@ func validNamespaceExportedServicesWithPeer() *multiclusterv1alpha1.NamespaceExp
 	}
 }
 
-func validNamespaceExportedServicesWithPartition() *multiclusterv1alpha1.NamespaceExportedServices {
+func validNamespaceExportedServicesWithPartition(partitionName string) *multiclusterv1alpha1.NamespaceExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Partition{
-				Partition: "partition",
+				Partition: partitionName,
 			},
 		},
 	}
@@ -36,11 +36,11 @@ func validNamespaceExportedServicesWithPartition() *multiclusterv1alpha1.Namespa
 	}
 }
 
-func validNamespaceExportedServicesWithSamenessGroup() *multiclusterv1alpha1.NamespaceExportedServices {
+func validNamespaceExportedServicesWithSamenessGroup(samenessGroupName string) *multiclusterv1alpha1.NamespaceExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_SamenessGroup{
-				SamenessGroup: "sameness_group",
+				SamenessGroup: samenessGroupName,
 			},
 		},
 	}
diff --git a/internal/multicluster/internal/types/partition_exported_services_ce_test.go b/internal/multicluster/internal/types/partition_exported_services_ce_test.go
index a46e69949e..af70755009 100644
--- a/internal/multicluster/internal/types/partition_exported_services_ce_test.go
+++ b/internal/multicluster/internal/types/partition_exported_services_ce_test.go
@@ -29,7 +29,7 @@ func TestPartitionExportedServicesValidations(t *testing.T) {
 	cases := map[string]testcase{
 		"partition exported services with peer": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.PartitionExportedServicesType, "partition-exported-services").
-				WithData(t, validPartitionExportedServicesWithPeer()).
+				WithData(t, validPartitionExportedServicesWithPeer("peer")).
 				Build(),
 		},
 	}
@@ -56,12 +56,12 @@ func TestPartitionExportedServicesValidations_Error(t *testing.T) {
 	cases := map[string]testcase{
 		"partition exported services with partition": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.PartitionExportedServicesType, "partition-exported-services").
-				WithData(t, validPartitionExportedServicesWithPartition()).
+				WithData(t, validPartitionExportedServicesWithPartition("default")).
 				Build(),
 		},
 		"partition exported services with sameness_group": {
 			Resource: resourcetest.Resource(multiclusterv1alpha1.PartitionExportedServicesType, "partition-exported-services").
-				WithData(t, validPartitionExportedServicesWithSamenessGroup()).
+				WithData(t, validPartitionExportedServicesWithSamenessGroup("sameness_group")).
 				Build(),
 		},
 	}
diff --git a/internal/multicluster/internal/types/partition_exported_services_test.go b/internal/multicluster/internal/types/partition_exported_services_test.go
index 0a9732b916..c436859f93 100644
--- a/internal/multicluster/internal/types/partition_exported_services_test.go
+++ b/internal/multicluster/internal/types/partition_exported_services_test.go
@@ -10,11 +10,11 @@ import (
 	"testing"
 )
 
-func validPartitionExportedServicesWithPeer() *multiclusterv1alpha1.PartitionExportedServices {
+func validPartitionExportedServicesWithPeer(peerName string) *multiclusterv1alpha1.PartitionExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Peer{
-				Peer: "peer",
+				Peer: peerName,
 			},
 		},
 	}
@@ -23,11 +23,11 @@ func validPartitionExportedServicesWithPeer() *multiclusterv1alpha1.PartitionExp
 	}
 }
 
-func validPartitionExportedServicesWithPartition() *multiclusterv1alpha1.PartitionExportedServices {
+func validPartitionExportedServicesWithPartition(partitionName string) *multiclusterv1alpha1.PartitionExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Partition{
-				Partition: "partition",
+				Partition: partitionName,
 			},
 		},
 	}
@@ -36,11 +36,11 @@ func validPartitionExportedServicesWithPartition() *multiclusterv1alpha1.Partiti
 	}
 }
 
-func validPartitionExportedServicesWithSamenessGroup() *multiclusterv1alpha1.PartitionExportedServices {
+func validPartitionExportedServicesWithSamenessGroup(samenessGroupName string) *multiclusterv1alpha1.PartitionExportedServices {
 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
 		{
 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_SamenessGroup{
-				SamenessGroup: "sameness_group",
+				SamenessGroup: samenessGroupName,
 			},
 		},
 	}
diff --git a/o.patch b/o.patch
index 89dd05bae5..f1db926d5b 100644
--- a/o.patch
+++ b/o.patch
@@ -1,48 +0,0 @@
-diff --git a/internal/multicluster/internal/types/exported_services_test.go b/internal/multicluster/internal/types/exported_services_test.go
-index 6af8e2c779..77efc276f8 100644
---- a/internal/multicluster/internal/types/exported_services_test.go
-+++ b/internal/multicluster/internal/types/exported_services_test.go
-@@ -34,7 +34,7 @@ func validExportedServicesWithPartition() *multiclusterv1alpha1.ExportedServices
- 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
- 		{
- 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Partition{
--				Partition: "default",
-+				Partition: "partition",
- 			},
- 		},
- 	}
-@@ -48,7 +48,7 @@ func validExportedServicesWithSamenessGroup() *multiclusterv1alpha1.ExportedServ
- 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
- 		{
- 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_SamenessGroup{
--				SamenessGroup: "",
-+				SamenessGroup: "sameness_group",
- 			},
- 		},
- 	}
-diff --git a/internal/multicluster/internal/types/namespace_exported_services_test.go b/internal/multicluster/internal/types/namespace_exported_services_test.go
-index d4f2249db6..075e75ff8b 100644
---- a/internal/multicluster/internal/types/namespace_exported_services_test.go
-+++ b/internal/multicluster/internal/types/namespace_exported_services_test.go
-@@ -27,7 +27,7 @@ func validNamespaceExportedServicesWithPartition() *multiclusterv1alpha1.Namespa
- 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
- 		{
- 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Partition{
--				Partition: "default",
-+				Partition: "partition",
- 			},
- 		},
- 	}
-diff --git a/internal/multicluster/internal/types/partition_exported_services_test.go b/internal/multicluster/internal/types/partition_exported_services_test.go
-index 0989ddc83b..0a9732b916 100644
---- a/internal/multicluster/internal/types/partition_exported_services_test.go
-+++ b/internal/multicluster/internal/types/partition_exported_services_test.go
-@@ -27,7 +27,7 @@ func validPartitionExportedServicesWithPartition() *multiclusterv1alpha1.Partiti
- 	consumers := []*multiclusterv1alpha1.ExportedServicesConsumer{
- 		{
- 			ConsumerTenancy: &multiclusterv1alpha1.ExportedServicesConsumer_Partition{
--				Partition: "default",
-+				Partition: "partition",
- 			},
- 		},
- 	}
