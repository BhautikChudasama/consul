name: reusable-unit-split

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      runs-on:
        description: An expression indicating which kind of runners to use.
        required: true
        type: string
      go-arch:
        required: false
        type: string
        default: ""
      uploaded-binary-name:
        required: false
        type: string
        default: "consul-bin" 
      args:
        required: false
        type: string
        default: ""
      runner-count: 
        required: false
        type: number
        default: 1
      go-test-flags:
        required: false
        type: string
        default: ""
      repository-name:
        required: true
        type: string
      go-tags:
        required: false
        type: string
        default: ""
    secrets:
      elevated-github-token:
        required: true
      consul-license:
        required: true
      datadog-api-key:
        required: true
env:
  TEST_RESULTS: /tmp/test-results
  GOTESTSUM_VERSION: 1.8.2
  GOARCH: ${{inputs.go-arch}}
  TOTAL_RUNNERS: ${{inputs.runner-count}}
  CONSUL_LICENSE: ${{secrets.consul-license}}
  GOTAGS: ${{ inputs.go-tags}}
  GOPRIVATE: github.com/hashicorp # Required for enterprise deps
  DATADOG_API_KEY: ${{secrets.datadog-api-key}}
  
jobs:
  set-test-package-matrix:
    runs-on: ubuntu-latest
    outputs:
      package-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: 'go.mod'
      - id: set-matrix
        run: ./.github/scripts/set_test_package_matrix.sh ${{env.TOTAL_RUNNERS}}

  go-test:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    name: "go-test"
    needs:
      - set-test-package-matrix
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.set-test-package-matrix.outputs.package-matrix) }}
    steps:   
      - name: ulimit
        run: |
          echo "Soft limits"
          ulimit -Sa
          echo "Hard limits"
          ulimit -Ha   
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      # NOTE: This step is specifically needed for ENT. It allows us to access the required private HashiCorp repos.
      - name: Setup Git
        if: ${{ endsWith(inputs.repository-name, '-enterprise') }}
        run: git config --global url."https://${{ secrets.elevated-github-token }}:@github.com".insteadOf "https://github.com"
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: mkdir -p ${{env.TEST_RESULTS}}
      - name: go mod download
        working-directory: ${{inputs.directory}}
        run: go mod download
      - name: Download consul
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{inputs.uploaded-binary-name}}
          path: ${{inputs.directory}} 
      - name: Display downloaded file
        run: ls -ld consul 
        working-directory: ${{inputs.directory}}
      - run: echo "$GITHUB_WORKSPACE/${{inputs.directory}}" >> $GITHUB_PATH
      - name: Make sure consul is executable
        run: chmod +x $GITHUB_WORKSPACE/${{inputs.directory}}/consul
      - run: go env
      - name: build custom go
        run: |
          cd /tmp
          git clone https://github.com/nfi-hashicorp/go.git
          cd go/src
          git checkout gotest-remote-cache
          ./make.bash


          
      - name: Run tests 
        working-directory: ${{inputs.directory}}
        run: |
          export GOROOT=/tmp/go
          export PATH=$PATH:$GOROOT/bin
          export GOTESTCACHE=https://nfi-hashicorp-organic-xylophone-rq9q7w4xw643x766-2601.preview.app.github.dev/
          export GODEBUG=gocachetest=1
          # separate the list
          PACKAGE_NAMES="${{ join(matrix.package, ' ') }}"
          # PACKAGE_NAMES="${{ matrix.package }}"

          ${{inputs.go-test-flags}}

          go env
          
          # some tests expect this umask, and arm images have a different default
          umask 0022

          go test \
          -tags="${{env.GOTAGS}}" -p 2 \
          ${GO_TEST_FLAGS-} ${PACKAGE_NAMES}

      # NOTE: ENT specific step as we store secrets in Vault.
      - name: Authenticate to Vault
        if: ${{ endsWith(github.repository, '-enterprise') }}
        id: vault-auth
        run: vault-auth

      # NOTE: ENT specific step as we store secrets in Vault.
      - name: Fetch Secrets
        if: ${{ endsWith(github.repository, '-enterprise') }}
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: ${{ steps.vault-auth.outputs.addr }}
          caCertificate: ${{ steps.vault-auth.outputs.ca_certificate }}
          token: ${{ steps.vault-auth.outputs.token }}
          secrets: |
              kv/data/github/${{ github.repository }}/datadog apikey | DATADOG_API_KEY;

      - name: Notify Slack
        if: ${{ failure() }}
        run: .github/scripts/notify_slack.sh
