# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: Verify Release - Linux

on:
  workflow_call:
    inputs:
      package-name:
        description: 'Name of consul release package (consul vs consul-enterprise)'
        required: true
        default: 'consul'
        type: string
      version:
        description: The x.y.z version (also need to specify applicable suffixes like +ent and -dev)'
        required: true
        type: string
      runs-on:
        description: An expression indicating which kind of runners to use.
        required: true
        type: string

jobs:
  verify-linux-packages:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    strategy:
      fail-fast: false
      matrix:
        image: [
          { name: "ubuntu", package-manager: "apt", dockerfile: "./build-support/docker/Verify-Release-Ubuntu.dockerfile", arch: "amd64" },
          { name: "debian", package-manager: "apt", dockerfile: "./build-support/docker/Verify-Release-Debian.dockerfile", arch: "amd64" },
          { name: "fedora", package-manager: "rpm", dockerfile: "./build-support/docker/Verify-Release-Fedora.dockerfile", arch: "amd64" },
          { name: "centos", package-manager: "rpm", dockerfile: "./build-support/docker/Verify-Release-CentOS.dockerfile", arch: "amd64" },
          { name: "amazon", package-manager: "rpm", dockerfile: "./build-support/docker/Verify-Release-Amazon.dockerfile", arch: "amd64" },
        ]
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: docker build ${{ matrix.image.arch }} ${{ matrix.image.name }}
        run: |
          docker build \
          --build-arg PACKAGE=${{ inputs.package-name }} \
          --build-arg VERSION=${{ inputs.version }} \
          --build-arg TARGETARCH=${{ matrix.image.arch }} \
          -f ${{ matrix.image.dockerfile }} .