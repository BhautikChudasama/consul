name: go-tests

on:
#  pull_request:
#    branches-ignore:
#      - stable-website
#      - 'docs/**'
#      - 'ui/**'
#      - 'mktg-**' # Digital Team Terraform-generated branches' prefix
#      - 'backport/docs/**'
#      - 'backport/ui/**'
#      - 'backport/mktg-**'
  push:
#    branches:
#      # Push events on the main branch
#      - main
#      - release/**

permissions:
  contents: read

env:
  TEST_RESULTS: /tmp/test-results
  GOPRIVATE: github.com/hashicorp # Required for enterprise deps
  SKIP_CHECK_BRANCH: ${{ github.head_ref || github.ref_name }}

# concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  conditional-skip:
    runs-on: ubuntu-latest 
    name: Get files changed and conditionally skip CI
    outputs:
      skip-ci: ${{ steps.read-files.outputs.skip-ci }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0  
      - name: Get changed files
        id: read-files
        run: ./.github/scripts/filter_changed_files_go_test.sh

  setup:
    needs: [conditional-skip]
    name: Setup
    if: needs.conditional-skip.outputs.skip-ci != 'true'
    runs-on: ubuntu-latest
    outputs:
      compute-small: ${{ steps.setup-outputs.outputs.compute-small }}
      compute-medium: ${{ steps.setup-outputs.outputs.compute-medium }}
      compute-large: ${{ steps.setup-outputs.outputs.compute-large }}
      compute-xl: ${{ steps.setup-outputs.outputs.compute-xl }}
    steps:
    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
    - id: setup-outputs
      name: Setup outputs
      run: ./.github/scripts/get_runner_classes.sh

  always-fail:
    needs:
      - conditional-skip
      - setup
    runs-on: ubuntu-latest
    steps:
      - run: sleep 60s && echo "failing!" && exit 1

  # This is job is required for branch protection as a required gihub check
  # because GitHub actions show up as checks at the job level and not the
  # workflow level.  This is currently a feature request:
  # https://github.com/orgs/community/discussions/12395
  #
  # This job must:
  # - be placed after the fanout of a workflow so that everything fans back in
  #   to this job.
  # - "need" any job that is part of the fan out / fan in
  # - implement the if logic because we have conditional jobs
  #   (go-test-enteprise) that this job needs and this would potentially get
  #   skipped if a previous job got skipped.  So we use the if clause to make
  # sure it does not get skipped.

  go-tests-success:
    needs:
    - conditional-skip
    - setup
    - always-fail
    # - go-test-s390x
    runs-on: ${{ fromJSON(needs.setup.outputs.compute-small) }}
    if: always() && needs.conditional-skip.outputs.skip-ci != 'true'
    steps:
      - name: evaluate upstream job results
        run: |
          NEEDS_JSON='${{ toJSON(needs) }}'
          
          # if failure (not cancelled), notify Slack
          if echo "${NEEDS_JSON}" | grep -E -i '\"result\": \"(failure)\"'; then
            printf "Tests failed, notifying Slack"
            echo "FAILED_TESTS=true" >> $GITHUB_ENV
          fi
          
          # exit 1 if failure or cancelled result for any upstream job
          # this ensures that we fail the PR check regardless of cancellation, rather than skip-passing it
          # see https://docs.github.com/en/actions/using-jobs/using-conditions-to-control-job-execution#overview
          if echo "${NEEDS_JSON}" | grep -E -i '\"result\": \"(failure|cancelled)\"'; then
            printf "Tests failed or workflow cancelled:\n\n${{ toJSON(needs) }}"
            exit 1
          fi
      - name: Set Slack commit message summary
        # avoid duplicating branch filter logic below and enable easier message content debugging
        # always() ensures this runs even if the test eval step exits 1
        if: always()
        run: echo "COMMIT_MESSAGE_SUMMARY=$(echo ${{ github.event.head_commit.message }} | head -n 1)" >> $GITHUB_ENV
      - name: Notify Slack
        # always() ensures this runs even if the test eval step exits 1
        if: ${{ always() && env.FAILED_TESTS == 'true' }} # && (github.ref_name == 'main' || startsWith(github.ref_name, 'release/')) }}
        id: slack
        uses: slackapi/slack-github-action@e28cf165c92ffef168d23c5c9000cffc8a25e117 # v1.24.0
        with:
          # github.event.head_commit.message and github.ref_name both rely on this event occurring on a push / merge
          payload: |
            {
              "message": "THIS IS A TEST ‚ùå ${{ github.workflow }} workflow failed: \n\n- Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \n- Branch: ${{ github.ref_name }} \n- Message: ${{ env.COMMIT_MESSAGE_SUMMARY }} \n- Author: ${{ github.event.sender.login }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CONSUL_PROTECTED_BRANCH_TEST_SLACK_WEBHOOK }}