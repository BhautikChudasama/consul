[
  {
    "title": "What is Consul?",
    "path": "intro"
  },
  {
    "title": "Why choose Consul?",
    "routes": [
      {
        "title": "Overview",
        "path": "why"
      },
      {
        "title": "Service Meshes",
        "path": "why/service-mesh"
      },
      {
        "title": "DNS Tools",
        "path": "why/dns"
      },
      {
        "title": "Configuration Management Tools",
        "path": "why/config-management"
      },
      {
        "title": "API Gateways",
        "path": "why/api-gateway"
      }
    ]
  },
  {
    "title": "Consul personas",
    "path": "personas"
  },
  {
    "title": "Use cases",
    "routes": [
      {
        "title": "Service discovery",
        "path": "use-case/service-discovery"
      },
      {
        "title": "Service mesh",
        "path": "use-case/service-mesh"
      },
      {
        "title": "Network infrastructure automation",
        "path": "use-case/network-infrastructure-automation"
      }
    ]
  },
  {
    "title": "Get started",
    "routes": [
      {
        "title": "Consul on VMs",
        "href": "https://developer.hashicorp.com/consul/tutorials/get-started-vms"
      },
      {
        "title": "Consul on Kubernetes",
        "href": "https://developer.hashicorp.com/consul/tutorials/get-started-kubernetes"
      },
      {
        "title": "HCP Consul",
        "href": "https://developer.hashicorp.com/consul/tutorials/get-started-hcp"
      }
    ]
  },
  {
    "title": "Architecture",
    "routes": [
      {
        "title": "Overview",
        "path": "architecture"
      },
      {
        "title": "v1 APIs",
        "routes": [
          {
            "title": "Agent",
            "routes": [
              {
                "title": "ACL resolver",
                "path": "architecture/v1/agent/acl"
              },
              {
                "title": "Checks",
                "path": "architecture/v1/agent/check"
              },
              {
                "title": "Consul DNS",
                "path": "architecture/v1/agent/dns"
              },
              {
                "title": "HTTP API",
                "path": "architecture/v1/agent/http-api"
              },
              {
                "title": "Proxy configuration controller",
                "path": "architecture/v1/agent/proxy-config"
              }
            ]
          },
          {
            "title": "Server",
            "routes": [
              {
                "title": "Raft",
                "path": "architecture/v1/server/raft"
              },
              {
                "title": "Remote procude calls (RPCs)",
                "path": "architecture/v1/server/rpc"
              }
            ]
          },
          {
            "title": "State",
            "routes": [
              {
                "title": "ACLs",
                "path": "architecture/v1/state/acl"
              },
              {
                "title": "Catalog",
                "path": "architecture/v1/state/catalog"
              },
              {
                "title": "Cloud auto-pilot",
                "path": "architecture/v1/state/autopilot"
              },
              {
                "title": "Cluster peering API",
                "path": "architecture/v1/state/peering"
              },
              {
                "title": "Gateway manager",
                "path": "architecture/v1/state/gateway"
              },
              {
                "title": "Key-value (KV) store",
                "path": "architecture/v1/state/kv"
              },
              {
                "title": "Network areas",
                "path": "architecture/v1/state/area"
              },
              {
                "title": "Network coordinates",
                "path": "architecture/v1/state/coordinate"
              },
              {
                "title": "Prepared query API",
                "path": "architecture/v1/state/prepared-query"
              },
              {
                "title": "Service mesh management",
                "path": "architecture/v1/state/mesh"
              },
              {
                "title": "Sessions and notifications",
                "path": "architecture/v1/state/session"
              },
              {
                "title": "WAN federation",
                "path": "architecture/v1/state/federation"
              }
            ]
          }
        ]
      },
      {
        "title": "v2 APIs",
        "routes": [
          {
            "title": "Agent",
            "path": "architecture/v2/agent"
          },
          {
            "title": "Consul dataplanes",
            "path": "architecture/v2/consul-dataplane"
          },
          {
            "title": "Server",
            "routes": [
              {
                "title": "ACLs",
                "path": "architecture/v2/server/acl"
              },
              {
                "title": "Catalog",
                "path": "architecture/v2/server/catalog"
              },
              {
                "title": "Consul DNS",
                "path": "architecture/v2/server/dns"
              },
              {
                "title": "Gossip",
                "path": "architecture/v2/server/gossip"
              },
              {
                "title": "Health checks",
                "path": "architecture/v2/server/health-check"
              },
              {
                "title": "Service mesh management",
                "path": "architecture/v2/server/mesh"
              },
              {
                "title": "Watches",
                "path": "architecture/v2/server/watch"
              }
            ]
          },
          {
            "title": "State",
            "routes": [
              {
                "title": "Raft",
                "path": "architecture/v2/state/raft"
              },
              {
                "title": "State backends",
                "path": "architecture/v2/state/backend"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "divider": true
  },
  {
    "title": "Deploy Consul",
    "routes": [
      {
        "title": "Overview",
        "path": "deploy/overview"
      },
      {
        "title": "Deploy server cluster",
        "routes": [
          {
            "title": "Overview",
            "path": "deploy/server/overview"
          },
          {
            "title": "Required ports",
            "path": "deploy/server/ports"
          },
          {
            "title": "FIPS 140-2 compliance",
            "path": "deploy/server/fips"
          },
          {
            "title": "HashiCorp-managed clusters",
            "path": "deploy/server/hcp"
          },
          {
            "title": "Virtual machine (VM)",
            "routes": [
              {
                "title": "Overview",
                "path": "deploy/server/vm/overview"
              },
              {
                "title": "Bootstrap a datacenter",
                "path": "deploy/server/vm/bootstrap"
              },
              {
                "title": "Automatic agent discovery",
                "path": "deploy/server/vm/cloud-auto-join"
              },
              {
                "title": "Server requirements",
                "path": "deploy/server/vm/requirements"
              },
              {
                "title": "Consul Enterprise",
                "path": "deploy/server/vm/enterprise"
              }
            ]
          },
          {
            "title": "Kubernetes",
            "routes": [
              {
                "title": "Overview",
                "path": "deploy/server/k8s/overview"
              },
              {
                "title": "Platform guides",
                "routes": [
                  {
                    "title": "Minikube",
                    "path": "deploy/server/k8s/platform-guides/minikube"
                  },
                  {
                    "title": "Kind",
                    "path": "deploy/server/k8s/platform-guides/kind"
                  },
                  {
                    "title": "AKS (Azure)",
                    "path": "deploy/server/k8s/platform-guides/aks"
                  },
                  {
                    "title": "EKS (AWS)",
                    "path": "deploy/server/k8s/platform-guides/eks"
                  },
                  {
                    "title": "GKE (Google Cloud)",
                    "path": "deploy/server/k8s/platform-guides/gke"
                  },
                  {
                    "title": "Red Hat OpenShift",
                    "path": "deploy/server/k8s/platform-guides/openshift"
                  },
                  {
                    "title": "Self-hosted Kubernetes",
                    "path": "deploy/server/k8s/platform-guides/self-hosted"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "title": "Connect workloads",
        "routes": [
          {
            "title": "Overview",
            "path": "deploy/workload/overview"
          },
          {
            "title": "Virtual machine (VM)",
            "path": "deploy/workload/vm"
          },
          {
            "title": "Kubernetes",
            "routes": [
              {
                "title": "Overview",
                "path": "deploy/workload/k8s/overview"
              },
              {
                "title": "Examples",
                "routes": [
                  {
                    "title": "Clients outside Kubernetes",
                    "path": "deploy/workload/k8s/examples/client-outside-k8s"
                  },
                  {
                    "title": "Servers outside Kubernetes",
                    "path": "deploy/workload/k8s/examples/server-outside-k8s"
                  },
                  {
                    "title": "Consul in multiple Kubernetes clusters",
                    "path": "deploy/workload/k8s/examples/multiple-k8s-cluster"
                  },
                  {
                    "title": "Consul Enterprise",
                    "path": "deploy/workload/k8s/examples/enterprise"
                  },
                  {
                    "title": "Multi-cluster federation",
                    "routes": [
                      {
                        "title": "Overview",
                        "path": "deploy/workload/k8s/examples/federation/overview"
                      },
                      {
                        "title": "Federate Kubernetes clusters",
                        "path": "deploy/workload/k8s/examples/federation/k8s-k8s"
                      },
                      {
                        "title": "Federate VM and Kubernetes clusters",
                        "path": "deploy/workload/k8s/examples/federation/vm-k8s"
                      }
                    ]
                  },
                  {
                    "title": "Vault as a secrets backend",
                    "routes": [
                      {
                        "title": "Overview",
                        "path": "deploy/workload/k8s/examples/vault/overview"
                      },
                      {
                        "title": "System integration",
                        "path": "deploy/workload/k8s/examples/vault/system-integration"
                      },
                      {
                        "title": "Data integration",
                        "routes": [
                          {
                            "title": "Overview",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/overview"
                          },
                          {
                            "title": "Bootstrap token",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/bootstrap-token"
                          },
                          {
                            "title": "Enterprise license",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/enterprise-license"
                          },
                          {
                            "title": "Gossip encryption key",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/gossip-encryption-key"
                          },
                          {
                            "title": "Partition token",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/partition-token"
                          },
                          {
                            "title": "Replication token",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/replication-token"
                          },
                          {
                            "title": "Server TLS",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/server-tls"
                          },
                          {
                            "title": "Service mesh certificates",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/service-mesh-certificate"
                          },
                          {
                            "title": "Snapshot agent config",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/snapshot-agent-config"
                          },
                          {
                            "title": "Webhook certificates",
                            "path": "deploy/workload/k8s/examples/vault/data-integration/webhook-certificates"
                          }
                        ]
                      },
                      {
                        "title": "WAN federation",
                        "path": "deploy/workload/k8s/examples/vault/wan-federation"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "title": "Nomad",
            "path": "deploy/workload/nomad"
          },
          {
            "title": "ECS",
            "routes": [
              {
                "title": "Overview",
                "path": "deploy/workload/ecs/overview"
              },
              {
                "title": "Deploy automatically with Terraform",
                "path": "deploy/workload/ecs/automate-terraform"
              },
              {
                "title": "Deploy manually",
                "path": "deploy/workload/ecs/manual"
              },
              {
                "title": "Reference",
                "routes": [
                  {
                    "title": "Compatibility matrix",
                    "href": "reference/ecs/compatibility-matrix"
                  },
                  {
                    "title": "Consul server configuration",
                    "href": "reference/ecs/server-configuration"
                  }
                ]
              }
            ]
          },
          {
            "title": "Lambda",
            "path": "deploy/workload/lambda"
          }
        ]
      },
      {
        "title": "Configure service mesh",
        "path": "deploy/configure-service-mesh"
      },
      {
        "title": "Consul Enterprise",
        "path": "deploy/enterprise"
      }
    ]
  },
  {
    "title": "Secure Consul",
    "routes": [
      {
        "title": "Overview",
        "path": "secure/overview"
      },
      {
        "title": "Access Control Lists (ACLs)",
        "routes": [
          {
            "title": "Overview",
            "path": "secure/acl/overview"
          },
          {
            "title": "Token",
            "routes": [
              {
                "title": "Overview",
                "path": "secure/acl/token/overview"
              },
              {
                "title": "Service token",
                "path": "secure/acl/token/service"
              },
              {
                "title": "Agent token",
                "path": "secure/acl/token/agent"
              },
              {
                "title": "UI token",
                "path": "secure/acl/token/ui"
              },
              {
                "title": "Mesh gateway token",
                "path": "secure/acl/token/mesh-gateway"
              },
              {
                "title": "Ingress gateway token",
                "path": "secure/acl/token/ingress-gateway"
              },
              {
                "title": "Terminating gateway token",
                "path": "secure/acl/token/terminating-gateway"
              },
              {
                "title": "DNS token",
                "path": "secure/acl/token/dns"
              },
              {
                "title": "Replication token",
                "path": "secure/acl/token/replication"
              },
              {
                "title": "Snapshot agent token",
                "path": "secure/acl/token/snapshot-agent"
              },
              {
                "title": "Vault Consul storage backend",
                "path": "secure/acl/token/vault-storage-backend"
              },
              {
                "title": "Consul ESM token",
                "path": "secure/acl/token/esm"
              }
            ]
          },
          {
            "title": "Policy",
            "path": "secure/acl/policy"
          },
          {
            "title": "Role",
            "path": "secure/acl/role"
          },
          {
            "title": "Rule",
            "path": "secure/acl/rule"
          },
          {
            "title": "Enable ACLs in federated datacenters",
            "path": "secure/acl/enable-federated-datacenters"
          },
          {
            "title": "Configure auth methods",
            "routes": [
              {
                "title": "Overview",
                "path": "secure/acl/auth-method/overview"
              },
              {
                "title": "Kubernetes",
                "path": "secure/acl/auth-method/k8s"
              },     
              {
                "title": "JWT",
                "path": "secure/acl/auth-method/jwt"
              },
              {
                "title": "OIDC (ENT)",
                "path": "secure/acl/auth-method/oidc"
              },
              {
                "title": "AWS IAM",
                "path": "secure/acl/auth-method/aws-iam"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "title": "Monitor Consul",
    "routes": [
      {
        "title": "Overview",
        "path": "monitor/overview"
      },
      {
        "title": "Agent telemetry",
        "routes": [
          {
            "title": "Overview",
            "path": "monitor/telemetry/overview"
          },
          {
            "title": "Enable host metrics",
            "path": "monitor/telemetry/enable-host-metrics"
          },
          {
            "title": "Access and stream metrics",
            "path": "monitor/telemetry/access-stream-metrics"
          },
          {
            "title": "Stream metrics to external store",
            "path": "monitor/telemetry/stream-metrics-external"
          }
        ]
      },
      {
        "title": "Consul logs",
        "routes": [
          {
            "title": "Overview",
            "path": "monitor/log/overview"
          },
          {
            "title": "Log agent behavior",
            "path": "monitor/log/agent-behavior"
          },
          {
            "title": "Log HTTP API request (Audit log - Ent)",
            "path": "monitor/log/audit-log"
          }
        ]
      },
      {
        "title": "WAL LogStore",
        "badge": {
          "text": "EXPERIMENTAL",
          "type": "outlined",
          "color": "neutral"
        },
        "routes": [
          {
            "title": "Overview",
            "path": "monitor/wal/overview"
          },
          {
            "title": "Enable WAL LogStore backend",
            "path": "monitor/wal/enable"
          },
          {
            "title": "Monitor Raft metrics and logs",
            "path": "monitor/wal/raft-metrics-logs"
          },
          {
            "title": "Revert to BoltDB",
            "path": "monitor/wal/revert-boltdb"
          }
        ]
      }
    ]
  },
  {
    "title": "Manage Consul",
    "routes": [
      {
        "title": "Overview",
        "path": "manage/overview"
      },
      {
        "title": "Snapshot",
        "path": "manage/snapshot"
      },
      {
        "title": "Automated backups",
        "badge": {
          "text": "ENTERPRISE",
          "type": "outlined",
          "color": "neutral"
        },
        "path": "manage/automated-backup"
      },
      {
        "title": "Redundancy zones",
        "badge": {
          "text": "ENTERPRISE",
          "type": "outlined",
          "color": "neutral"
        },
        "path": "manage/redundancy-zone"
      },
      {
        "title": "Read replicas",
        "badge": {
          "text": "ENTERPRISE",
          "type": "outlined",
          "color": "neutral"
        },
        "path": "manage/read-replica"
      },
      {
        "title": "Agent rate limit",
        "routes": [
          {
            "title": "Overview",
            "path": "manage/agent-rate-limit/overview"
          },
          {
            "title": "Initialize rate limit settings",
            "path": "manage/agent-rate-limit/initialize"
          },
          {
            "title": "Monitor traffic rate limits",
            "path": "manage/agent-rate-limit/monitor"
          },
          {
            "title": "Set global traffic rate limit",
            "path": "manage/agent-rate-limit/set-global"
          },
          {
            "title": "Limit traffic rates from source IP address",
            "badge": {
              "text": "ENTERPRISE",
              "type": "outlined",
              "color": "neutral"
            },
            "path": "manage/agent-rate-limit/source-ip-address"
          }
        ]
      }
    ]
  },
  {
    "title": "Upgrade Consul",
    "routes": [
      {
        "title": "Overview",
        "path": "upgrade/overview"
      },
      {
        "title": "Automated upgrades",
        "badge": {
          "text": "ENTERPRISE",
          "type": "outlined",
          "color": "neutral"
        },
        "path": "upgrade/automated-upgrade"
      },
      {
        "title": "Compatibility promise",
        "routes": [
          {
            "title": "Overview",
            "path": "upgrade/compatibility-promise/overview"
          },
          {
            "title": "Consul on Kubernetes",
            "path": "upgrade/compatibility-promise/consul-k8s"
          },
          {
            "title": "ECS",
            "path": "upgrade/compatibility-promise/ecs"
          },
          {
            "title": "Consul-Terraform-Sync (CTS)",
            "path": "upgrade/compatibility-promise/cts"
          }
        ]
      },
      {
        "title": "Specific version details",
        "path": "upgrade/specific-version-details"
      },
      {
        "title": "Upgrade instructions",
        "routes": [
          {
            "title": "Overview",
            "path": "upgrade/instruction/overview"
          },
          {
            "title": "General process",
            "path": "upgrade/instruction/general-process"
          },
          {
            "title": "Upgrade to latest 1.10.x",
            "path": "upgrade/instruction/1-10-x"
          },
          {
            "title": "Upgrade to latest 1.8.x",
            "path": "upgrade/instruction/1-8-x"
          },
          {
            "title": "Upgrade to latest 1.6.x",
            "path": "upgrade/instruction/1-6-x"
          },
          {
            "title": "Upgrade to latest 1.2.x",
            "path": "upgrade/instruction/1-2-x"
          }
        ]
      },
      {
        "title": "Consul on Kubernetes",
        "routes": [
          {
            "title": "Overview",
            "path": "upgrade/k8s/overview"
          },
          {
            "title": "consul-k8s",
            "path": "upgrade/k8s/consul-k8s"
          },
          {
            "title": "Upgrade cluster to use CRDs",
            "path": "upgrade/k8s/crds"
          }
        ]
      },
      {
        "title": "API gateway",
        "path": "upgrade/api-gateway"
      }
    ]
  },
  {
    "title": "Release notes",
    "path": "release-notes"
  },
  {
    "divider": true
  },
  {
    "title": "Register services",
    "routes": [
      {
        "title": "Overview",
        "path": "register"
      },
      {
        "title": "Services and health checks",
        "routes": [
          {
            "title": "Define services",
            "path": "register/service/define" 
          },
          {
            "title": "Define health checks",
            "path": "register/service/health-check"
          },
          {
            "title": "Register services and health checks",
            "path": "register/service" 
          },
          {
            "title": "Reference",
            "routes": [
              {
                "title": "Service",
                "href": "reference/service" 
              },
              {
                "title": "Service defaults",
                "href": "reference/config-entry/service-defaults" 
              },
              {
                "title": "Health check",
                "href": "reference/health-check" 
              }
            ]
          }
        ]
      },
      {
        "title": "External services",
        "routes": [
          {
            "title": "Overview",
            "path": "register/external" 
          },
          {
            "title": "External service monitoring (ESM)",
            "path": "register/external/esm" 
          },
          {
            "title": "Terminating gateways",
            "routes": [
              {
                "title": "Overview",
                "path": "register/external/terminating-gateway" 
              },
              {
                "title": "Deploy terminating gateway",
                "path": "register/external/terminating-gateway/deploy"
              },
              {
                "title": "Kubernetes",
                "path": "register/external/terminating-gateway/k8s"
              },
              {
                "title": "Reference",
                "href": "reference/terminating-gateway"
              }
            ]
          }
        ]
      },
      {
        "title": "Kubernetes",
        "routes": [
          {
            "title": "Overview",
            "path": "register/k8s" 
          },
          {
            "title": "Register services with service sync",
            "path": "register/k8s/service-sync"
          },
          {
            "title": "Annotations and labels",
            "path": "register/k8s/annotations"
          }
        ]
      },
      {
        "title": "ECS",
        "routes": [
          {
            "title": "Overview",
            "path": "register/ecs" 
          },
          {
            "title": "Register tasks with Terraform",
            "path": "register/ecs/automate-terraform" 
          },
          {
            "title": "Register tasks manually",
            "path": "register/ecs/manual"
          },
          {
            "title": "Register existing tasks with Terraform",
            "path": "register/ecs/migrate-terraform"
          },
          {
            "title": "Configure ECS task bind address",
            "path": "register/ecs/configure-task-bind-address" 
          },
          {
            "title": "Consul Enterprise",
            "path": "register/ecs/enterprise"
          },
          {
            "title": "Task definition reference",
            "href": "reference/ecs/task-definition"
          }
        ]
      },
      {
        "title": "Lambda",
        "routes": [
          {
            "title": "Overview",
            "path": "register/lambda" 
          },
          {
            "title": "Register functions with Terraform",
            "path": "register/lambda/automate-terraform"
          },
          {
            "title": "Register functions manually",
            "path": "register/lambda/manual"
          }
        ]
      },
      {
        "title": "Register Nomad jobs",
        "path": "register/nomad"
      }
    ]
  },
  {
    "title": "Discover services",
    "routes": [
      {
        "title": "Overview",
        "path": "discover"
      },
      {
        "title": "DNS",
        "routes":
        [
          {
            "title": "Configure DNS behavior",
            "path": "discover/dns/configure"
          },
          {
            "title": "Perform static lookups",
            "path": "discover/dns/static-lookup"
          },
          {
            "title": "Perform dynamic lookups",
            "path": "discover/dns/dynamic-lookup"
          },
          {
            "title": "Issue prepared queries",
            "path": "discover/dns/prepared-query"
          }
        ]
      },
      {
        "title": "Resolve Consul DNS in Kubernetes",
        "path": "discover/k8s"
      }
    ]
  },
  {
    "title": "Connect services",
    "routes": [
      {
        "title": "Overview",
        "path": "connect"
      },
      {
        "title": "Configuration entries",
        "path": "connect/config-entries"
      },
      {
        "title": "Proxy",
        "routes": [
          {
            "title": "Overview",
            "path": "connect/proxy"
          },
          {
            "title": "Deploy service mesh proxy",
            "path": "connect/proxy/deploy-service-mesh"
          },
          {
            "title": "Deploy sidecar proxy",
            "path": "connect/proxy/deploy-sidecar"
          },
          {
            "title": "Envoy extension",
            "href": "envoy-extension"
          },
          {
            "title": "Proxy integration",
            "href": "integration/proxy"
          }
        ]
      },
      {
        "title": "Kubernetes",
        "routes": [
          {
            "title": "Overview",
            "path": "connect/k8s"
          },
          {
            "title": "Transparent proxy",
            "routes": [
              {
                "title": "Overview",
                "path": "connect/k8s/transparent-proxy"
              },
              {
                "title": "Enable transparent proxy",
                "path": "connect/k8s/transparent-proxy/enable"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "title": "Access services",
    "routes": [
      {
        "title": "Overview",
        "path": "access"
      },
      {
        "title": "API gateway",
        "routes": [
          {
            "title": "Overview",
            "path": "access/api-gateway/overview"
          },
          {
            "title": "Technical specifications (Kubernetes)",
            "path": "access/api-gateway/k8s-tech-specs"
          },
          {
            "title": "Install on Kubernetes",
            "path": "access/api-gateway/k8s-install"
          },
          {
            "title": "Upgrade on Kubernetes",
            "path": "access/api-gateway/k8s-upgrade"
          },
          {
            "title": "Deploy listener",
            "routes": [
              {
                "title": "Deploy listener to VMs",
                "path": "access/api-gateway/deploy-listener/vm"
              },
              {
                "title": "Deploy listener to Kubernetes",
                "path": "access/api-gateway/deploy-listener/k8s"
              }
            ]
          },
          {
            "title": "Define route",
            "routes": [
              {
                "title": "Define route on VMs",
                "path": "access/api-gateway/define-route/vm"
              },
              {
                "title": "Define route on Kubernetes",
                "path": "access/api-gateway/define-route/k8s"
              },
              {
                "title": "Reroute traffic in Kubernetes",
                "path": "access/api-gateway/define-route/k8s-reroute-traffic"
              },
              {
                "title": "Route to peered services in Kubernetes",
                "path": "access/api-gateway/define-route/k8s-route-peered"
              }
            ]
          },
          {
            "title": "Secure traffic",
            "routes": [
              {
                "title": "Encrypt traffic on VMs",
                "path": "access/api-gateway/secure-traffic/vm"
              },
              {
                "title": "Verify requests with JWTS on VMs",
                "path": "access/api-gateway/secure-traffic/vm-jwt"
              },
              {
                "title": "Verify requests with JWTS on Kubernetes",
                "path": "access/api-gateway/secure-traffic/k8s-jwt"
              }
            ]
          },
          {
            "title": "Reference",
            "routes": [
              {
                "title": "Overview",
                "href": "reference/api-gateway/overview"
              },
              {
                "title": "Gateway",
                "href": "reference/api-gateway/gateway"
              },
              {
                "title": "GatewayClass",
                "href": "reference/api-gateway/gatewayclass"
              },
              {
                "title": "GatewayClassConfig",
                "href": "reference/api-gateway/gatewayclassconfig"
              },
              {
                "title": "GatewayPolicy",
                "href": "reference/api-gateway/gatewaypolicy"
              },
              {
                "title": "RouteAuthFilter",
                "href": "reference/api-gateway/routeauthfilter"
              },
              {
                "title": "Routes",
                "href": "reference/api-gateway/routes"
              },
              {
                "title": "RouteRetryFilter",
                "href": "reference/api-gateway/routeretryfilter"
              },
              {
                "title": "RouteTimeoutFilter",
                "href": "reference/api-gateway/routetimeoutfilter"
              },
              {
                "title": "MeshService",
                "href": "reference/api-gateway/meshservice"
              }
            ]
          }
        ]
      },
      {
        "title": "Ingress gateway",
        "routes": [
          {
            "title": "Overview",
            "path": "access/ingress-gateway/overview"
          },
          {
            "title": "Create and manage ingress gateway",
            "path": "access/ingress-gateway/create"
          },
          {
            "title": "Serve TLS certificate from external service",
            "path": "access/ingress-gateway/external-service"
          },
          {
            "title": "Reference",
            "href": "reference/config-entry/ingress-gateway"
          }
        ]
      }
    ]
  },
  {
    "title": "Segment network",
    "routes": [
      {
        "title": "Overview",
        "path": "segment"
      },
      {
        "title": "Admin partition",
        "badge": {
          "text": "ENTERPRISE",
          "type": "outlined",
          "color": "neutral"
        },
        "routes": [
          {
            "title": "Overview",
            "path": "segment/admin-partition/overview"
          },
          {
            "title": "Create and manage admin partition",
            "path": "segment/admin-partition/create"
          }
        ]
      },
      {
        "title": "Namespace",
        "badge": {
          "text": "ENTERPRISE",
          "type": "outlined",
          "color": "neutral"
        },
        "routes": [
          {
            "title": "Overview",
            "path": "segment/namespace/overview"
          },
          {
            "title": "Create and manage namespace",
            "path": "segment/namespace/create"
          }
        ]
      },
      {
        "title": "Network area",
        "routes": [
          {
            "title": "Overview",
            "path": "segment/network-area/overview"
          },
          {
            "title": "Create and manage network area",
            "path": "segment/network-area/create"
          }
        ]
      },
      {
        "title": "Network segment",
        "routes": [
          {
            "title": "Overview",
            "path": "segment/network-segment/overview"
          },
          {
            "title": "Create and manage network segment",
            "path": "segment/network-segment/create"
          }
        ]
      }
    ]
  },
  {
    "title": "Link network segments",
    "routes": [
      {
        "title": "Overview",
        "path": "link"
      },
      {
        "title": "Cluster peering",
        "routes": [
          {
            "title": "Overview",
            "path": "link/peering"
          },
          {
            "title": "Establish connections",
            "routes": [
              {
                "title": "Virtual machine (VM)",
                "path": "link/peering/establish/vm"
              },
              {
                "title": "Kubernetes",
                "path": "link/peering/establish/k8s"
              }
            ]
          },
          {
            "title": "Manage connections",
            "routes": [
              {
                "title": "Virtual machine (VM)",
                "path": "link/peering/manage/vm"
              },
              {
                "title": "Kubernetes",
                "path": "link/peering/manage/k8s"
              }
            ]
          }
        ]
      },
      {
        "title": "Sameness groups",
        "path": "link/sameness-group"
      },
      {
        "title": "WAN federation",
        "routes": [
          {
            "title": "Establish federation connections",
            "path": "link/wan-fed/establish"
          },
          {
            "title": "Manage federation connections",
            "path": "link/wan-fed/manage"
          }
        ]
      },
      {
        "title": "Mesh gateway",
        "routes": [
          {
            "title": "Overview",
            "path": "link/mesh-gateway/overview"
          },
          {
            "title": "Enable WAN federation control plane traffic",
            "path": "link/mesh-gateway/enable"
          },
          {
            "title": "Enable traffic across WAN federated datacenters",
            "path": "link/mesh-gateway/wan-datacenter"
          },
          {
            "title": "Enable traffic across admin partition",
            "path": "link/mesh-gateway/peered-datacenter"
          },
          {
            "title": "Enable peering control plane traffic",
            "path": "link/mesh-gateway/admin-partition"
          }
        ]
      },
      {
        "title": "Kubernetes",
        "routes": [
          {
            "title": "Cluster peering",
            "routes": [
              {
                "title": "Establish connections",
                "href": "link/peering/establish/k8s"
              },
              {
                "title": "Manage connections",
                "href": "link/peering/manage/k8s"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "title": "Secure services",
    "routes": [
      {
        "title": "Overview",
        "path": "secure-mesh"
      },
      {
        "title": "Service intentions",
        "routes": [
          {
            "title": "Overview",
            "path": "secure-mesh/intention/overview"
          },
          {
            "title": "Create and manage intentions",
            "path": "secure-mesh/intention/create"
          },
          {
            "title": "JWT authorization",
            "path": "secure-mesh/intention/jwt"
          },
          {
            "title": "Reference",
            "href": "reference/config-entry/intention"
          }
        ]
      },
      {
        "title": "Certificate (mTLS)",
        "routes": [
          {
            "title": "Overview",
            "path": "secure-mesh/certificate/overview"
          },
          {
            "title": "Bootstrap certificate authority (CA)",
            "path": "secure-mesh/certificate/bootstrap"
          },
          {
            "title": "Rotate certificate",
            "path": "secure-mesh/certificate/rotate"
          },
          {
            "title": "Use built-in CA",
            "path": "secure-mesh/certificate/built-in"
          },
          {
            "title": "Use Vault for service mesh CA",
            "path": "secure-mesh/certificate/vault"
          },
          {
            "title": "Use AWS certificate manager",
            "path": "secure-mesh/certificate/aws-cert-manager"
          },
          {
            "title": "Enable permissive mTLS",
            "path": "secure-mesh/certificate/permissive-mtls"
          },
          {
            "title": "Kubernetes",
            "routes": [
              {
                "title": "Rotate TLS certificate",
                "path": "secure-mesh/certificate/k8s/rotate-tls"
              },
              {
                "title": "Confiugre TLS on an existing cluster",
                "path": "secure-mesh/certificate/k8s/configure-tls"
              },
              {
                "title": "Rotate gossip encryption keys",
                "path": "secure-mesh/certificate/k8s/rotate-gossip"
              }
            ]
          }
        ]
      },
      {
        "title": "Encryption",
        "path": "secure-mesh/encryption"
      },
      {
        "title": "Security model",
        "routes": [
          {
            "title": "Overview",
            "path": "secure-mesh/security-model/overview"
          },
          {
            "title": "Consul core",
            "path": "secure-mesh/security-model/core"
          },
          {
            "title": "Network infrastructure automation",
            "path": "secure-mesh/security-model/nia"
          }
        ]
      }
    ]
  },
  {
    "title": "Manage service traffic",
    "routes": [
      {
        "title": "Overview",
        "path": "manage-traffic/overview"
      },
      {
        "title": "Overview",
        "path": "manage-traffic/route-local"
      },
      {
        "title": "Overview",
        "path": "manage-traffic/rate-limit"
      },
      {
        "title": "Failover",
        "routes": [
          {
            "title": "Overview",
            "path": "manage-traffic/failover/overview"
          },
          {
            "title": "Configure failover services for Kubernetes",
            "path": "manage-traffic/failover/configure-k8s"
          },
          {
            "title": "Automate geo-failover with prepared queries",
            "path": "manage-traffic/failover/prepared-query"
          },
          {
            "title": "Route traffic to virtual services",
            "path": "manage-traffic/failover/virtual-service"
          },
          {
            "title": "Failover with sameness groups",
            "path": "manage-traffic/failover/sameness-group"
          }
        ]
      }
    ]
  },
  {
    "title": "Observe services",
    "routes": [
      {
        "title": "Overview",
        "path": "observe/overview"
      },
      {
        "title": "Access logs",
        "path": "observe/access-log"
      },
      {
        "title": "UI visualization",
        "path": "observe/ui-visualization"
      },
      {
        "title": "Distributed tracing",
        "path": "observe/distributed-tracing"
      },
      {
        "title": "Kubernetes metrics",
        "path": "observe/metrics"
      }
    ]
  },
  {
    "title": "Dynamically configure services",
    "routes": [
      {
        "title": "Overview",
        "path": "dynamic-app/overview"
      },
      {
        "title": "Consul KV",
        "path": "dynamic-app/kv"
      },
      {
        "title": "Session",
        "path": "dynamic-app/session"
      },
      {
        "title": "Watch",
        "path": "dynamic-app/watch"
      }
    ]
  },
  {
    "divider": true
  },
  {
    "title": "Kubernetes",
    "routes": [
      {
        "title": "Overview",
        "path": "k8s"
      }
    ]
  },
  {
    "title": "AWS ECS",
    "routes": [
      {
        "title": "Overview",
        "path": "ecs"
      }
    ]
  },
  {
    "title": "AWS Lambda",
    "routes": [
      {
        "title": "Overview",
        "path": "lambda"
      }
    ]
  },
  {
    "title": "Nomad",
    "routes": [
      {
        "title": "Overview",
        "path": "nomad"
      }
    ]
  },
  {
    "divider": true
  },
  {
    "title": "Integrations",
    "routes": [
      {
        "title": "Overview",
        "path": "integration"
      },
      {
        "title": "Proxy integration",
        "path": "integration/proxy"
      }
    ]
  },
  {
    "title": "Envoy extensions",
    "routes": [
      {
        "title": "Overview",
        "path": "envoy-extension"
      }
    ]
  },
  {
    "title": "Consul-Terraform-Sync (CTS)",
    "routes": [
      {
        "title": "Overview",
        "path": "cts"
      }
    ]
  },
  {
    "divider": true
  },
  {
    "title": "Glossary",
    "path": "glossary"
  },
  {
    "title": "Concepts",
    "routes": [
      {
        "title": "Consensus",
        "path": "concepts/consensus"
      },
      {
        "title": "Consul clusters",
        "path": "concepts/cluster"
      },
      {
        "title": "Consul datacenters",
        "path": "concepts/datacenter"
      },
      {
        "title": "Discovery chain",
        "path": "concepts/discovery-chain"
      },
      {
        "title": "Gossip",
        "path": "concepts/gossip"
      },
      {
        "title": "Health checks",
        "path": "concepts/health-check"
      },
      {
        "title": "Services",
        "path": "concepts/service"
      },
      {
        "title": "Upstreams",
        "path": "concepts/upstream"
      },
      {
        "title": "Addresses",
        "path": "concepts/address"
      },
      {
        "title": "Admin partitions",
        "path": "concepts/partition"
      },
      {
        "title": "Application Layer (L7)",
        "path": "concepts/l7"
      },
      {
        "title": "Control plane",
        "path": "concepts/control-plane"
      },
      {
        "title": "Data plane",
        "path": "concepts/data-plane"
      },
      {
        "title": "Namespaces",
        "path": "concepts/namespace"
      },
      {
        "title": "Ports",
        "path": "concepts/port"
      },
      {
        "title": "Proxies",
        "path": "concepts/proxy"
      },
      {
        "title": "Transport Layer (L4)",
        "path": "concepts/l4"
      }
    ]
  },
  {
    "title": "Features",
    "routes": [
      {
        "title": "Access and platform logging",
        "path": "feature/logging"
      },
      {
        "title": "Automated failover",
        "path": "feature/failover"
      },
      {
        "title": "Certificate authority",
        "path": "feature/certificate-authority"
      },
      {
        "title": "Cluster peering",
        "path": "feature/peering"
      },
      {
        "title": "Consul Enterprise",
        "path": "feature/enterprise"
      },
      {
        "title": "Disaster recovery",
        "path": "feature/recovery"
      },
      {
        "title": "Hybrid cloud and on-prem service mesh",
        "path": "feature/hybrid-cloud"
      },
      {
        "title": "Multi-cloud service mesh",
        "path": "feature/multi-cloud"
      },
      {
        "title": "Telemetry",
        "path": "feature/telemetry"
      },
      {
        "title": "WAN federation",
        "path": "feature/federation"
      }
    ]
  },
  {
    "title": "References",
    "routes": [
      {
        "title": "Access Control Lists (ACLs)",
        "path": "reference/acl"
      },
      {
        "title": "API gateway",
        "routes": [
          {
            "title": "Overview",
            "path": "reference/api-gateway/overview"
          },
          {
            "title": "Gateway",
            "path": "reference/api-gateway/gateway"
          },
          {
            "title": "GatewayClass",
            "path": "reference/api-gateway/gatewayclass"
          },
          {
            "title": "GatewayClassConfig",
            "path": "reference/api-gateway/gatewayclassconfig"
          },
          {
            "title": "GatewayPolicy",
            "path": "reference/api-gateway/gatewaypolicy"
          },
          {
            "title": "RouteAuthFilter",
            "path": "reference/api-gateway/routeauthfilter"
          },
          {
            "title": "Routes",
            "path": "reference/api-gateway/routes"
          },
          {
            "title": "RouteRetryFilter",
            "path": "reference/api-gateway/routeretryfilter"
          },
          {
            "title": "RouteTimeoutFilter",
            "path": "reference/api-gateway/routetimeoutfilter"
          },
          {
            "title": "MeshService",
            "path": "reference/api-gateway/meshservice"
          }
        ]
      },
      {
        "title": "Configuration entries",
        "routes": [
          {
            "title": "API gateway",
            "path": "reference/config-entry/api-gateway"
          },
          {
            "title": "Control plane request limit",
            "path": "reference/config-entry/control-plane-request-limit"
          },
          {
            "title": "Exported services",
            "path": "reference/config-entry/exported-services"
          },
          {
            "title": "HTTP route",
            "path": "reference/config-entry/http-route"
          },
          {
            "title": "Ingress gateway",
            "path": "reference/config-entry/ingress-gateway"
          },
          {
            "title": "Inline certificate",
            "path": "reference/config-entry/inline-certificate"
          },
          {
            "title": "JWT provider",
            "path": "reference/config-entry/jwt-provider"
          },
          {
            "title": "Mesh",
            "path": "reference/config-entry/mesh"
          },
          {
            "title": "Proxy defaults",
            "path": "reference/config-entry/proxy-defaults"
          },
          {
            "title": "Sameness group",
            "path": "reference/config-entry/sameness-group"
          },
          {
            "title": "Service defaults",
            "path": "reference/config-entry/service-defaults"
          },
          {
            "title": "Service intentions",
            "path": "reference/config-entry/service-intentions"
          },
          {
            "title": "Service resolver",
            "path": "reference/config-entry/service-resolver"
          },
          {
            "title": "Service router",
            "path": "reference/config-entry/service-router"
          },
          {
            "title": "Service splitter",
            "path": "reference/config-entry/service-splitter"
          },
          {
            "title": "TCP route",
            "path": "reference/config-entry/tcp-route"
          },
          {
            "title": "Terminating gateways",
            "path": "reference/config-entry/terminating-gateway"
          }
        ]
      },
      {
        "title": "Consul agents",
        "path": "reference/agent"
      },
      {
        "title": "Consul dataplanes",
        "path": "reference/dataplane"
      },
      {
        "title": "Consul DNS",
        "path": "reference/dns"
      },
      {
        "title": "ECS",
        "routes": [
          {
            "title": "Task definition",
            "path": "reference/ecs/task-definition"
          }
        ]
      },
      {
        "title": "Health checks",
        "path": "reference/health-check"
      },
      {
        "title": "Proxies",
        "routes": [
          {
            "title": "Built-in proxy configuration",
            "path": "reference/proxy/built-in"
          },
          {
            "title": "Connect proxy configuration",
            "path": "reference/proxy/connect-proxy"
          },
          {
            "title": "Envoy configuration",
            "path": "reference/proxy/envoy"
          },
          {
            "title": "Envoy extensions",
            "routes": [
              {
                "title": "External authorization",
                "path": "reference/proxy/extensions/ext-authz"
              },
              {
                "title": "Open Telemetry",
                "path": "reference/proxy/extensions/otel"
              },
              {
                "title": "Property override",
                "path": "reference/proxy/extensions/property-override"
              },
              {
                "title": "WebAssembly",
                "path": "reference/proxy/extensions/wasm"
              }
            ]
          },
          {
            "title": "Sidecar proxy configuration",
            "path": "reference/proxy/sidecar"
          }
        ]
      },
      {
        "title": "Mesh gateways",
        "path": "reference/mesh-gateway"
      },
      {
        "title": "Resources",
        "routes": [
          {
            "title": "East-West",
            "routes": [
              {
                "title": "GRPCRoute",
                "path": "reference/resource/east-west/grpcroute"
              },
              {
                "title": "HTTPRoute",
                "path": "reference/resource/east-west/httproute"
              },
              {
                "title": "ProxyConfiguration",
                "path": "reference/resource/east-west/proxyconfig"
              },
              {
                "title": "TCPRoute",
                "path": "reference/resource/east-west/tcproute"
              },
              {
                "title": "TrafficPermissions",
                "path": "reference/resource/east-west/trafficpermissions"
              }
            ]
          },
          {
            "title": "North-South",
            "routes": [
              {
                "title": "Gateway",
                "path": "reference/resource/north-south/gateway"
              },
              {
                "title": "GatewayClass",
                "path": "reference/resource/north-south/gatewayclass"
              },
              {
                "title": "GatewayClassConfig",
                "path": "reference/resource/north-south/gatewayclassconfig"
              },
              {
                "title": "GatewayPolicy",
                "path": "reference/resource/north-south/gatewaypolicy"
              },
              {
                "title": "HTTPRoute",
                "path": "reference/resource/north-south/httproute"
              },
              {
                "title": "MeshService",
                "path": "reference/resource/north-south/meshservice"
              },
              {
                "title": "RouteAuthFilter",
                "path": "reference/resource/north-south/routeauthfilter"
              },
              {
                "title": "RouteRetryFilter",
                "path": "reference/resource/north-south/routeretryfilter"
              },
              {
                "title": "Routes",
                "path": "reference/resource/north-south/routes"
              },
              {
                "title": "RouteTimeoutFilter",
                "path": "reference/resource/north-south/routetimeoutfilter"
              }
            ]
          }
        ]
      },
      {
        "title": "Service definitions",
        "path": "reference/service"
      },
      {
        "title": "Terminating gateways",
        "path": "reference/terminating-gateway"
      }
    ]
  }
]